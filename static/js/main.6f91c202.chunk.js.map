{"version":3,"sources":["components/PhoneForm.js","components/PhoneInfo.js","components/PhoneInfoList.js","App.js","reportWebVitals.js","index.js"],"names":["PhoneForm","input","React","createRef","state","name","phone","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","onCreate","current","focus","onSubmit","this","placeholder","onChange","ref","type","Component","PhoneInfo","editing","handleRemove","info","onRemove","id","handleToggleEdit","onUpdate","nextProps","nextState","console","log","style","border","padding","margin","onClick","PhoneInfoList","data","list","map","defaultProps","App","useState","setId","keyword","setKeyword","information","setInfomation","className","concat","filter","indexOf","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6f91c202.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport default class PhoneForm extends Component {\n  \n  // input = null;\n  input = React.createRef();\n\n  state = {\n    name: '',\n    phone:'',\n  }\n\n  handleChange = (e)=> {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.onCreate(this.state)\n    this.setState({\n      name: '',\n      phone: ''\n    })\n    // this.input.focus();\n    this.input.current.focus();\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input \n          name=\"name\"\n          placeholder=\"이름\" \n          onChange={this.handleChange} \n          value={this.state.name}\n          // ref={ref=> this.input=ref}\n          ref = {this.input}\n        />\n        <input \n          name=\"phone\"\n          placeholder=\"전화번호\" \n          onChange={this.handleChange} \n          value={this.state.phone}\n        />\n        <button type=\"submit\">등록</button>\n      </form>\n    )\n  }\n}\n","import React, { Component, Fragment } from 'react'\n\nexport default class PhoneInfo extends Component {\n\n  state = {\n    editing: false,\n    name: '',\n    phone: '',\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if(this.state !== nextState) return true\n    return this.props.info !== nextProps.info;\n  }\n  \n\n  handleRemove = () => {\n    const {info, onRemove} = this.props;\n    onRemove(info.id);\n  }\n\n  handleToggleEdit = () => {\n    const {info, onUpdate } = this.props;\n    // 수정하고 적용버튼 누를 때\n    if(this.state.editing){\n      onUpdate(info.id, {\n        name: this.state.name,\n        phone: this.state.phone,\n      })\n    }else{\n      this.setState({\n        name: info.name,\n        phone: info.phone\n      })\n    }\n    this.setState({\n      editing: !this.state.editing\n    });\n\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  render() {\n    \n    const { name, phone, id } = this.props.info;\n    const { editing } = this.state; \n\n    const style = {\n      border: '1px solid black',\n      padding: '8px',\n      margin: '8px', \n    }\n\n    console.log(name)\n\n    return (\n      <div style={style}>\n        {\n          editing ? \n          (\n          <Fragment>\n            <div><input name=\"name\" onChange={this.handleChange} value={this.state.name}/></div>\n            <div><input name=\"phone\" onChange={this.handleChange} value={this.state.phone}/></div>\n          </Fragment>\n          ) : (\n          <Fragment>\n            <div><b>{name}</b></div>    \n            <div>{phone}</div>\n          </Fragment>\n          )\n        }\n        <button onClick={this.handleRemove}>삭제</button>\n        <button onClick={this.handleToggleEdit}>{editing? '적용': '수정'}</button>\n        \n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport PhoneInfo from './PhoneInfo';\n\nexport default class PhoneInfoList extends Component {\n\n  static defaultProps ={\n    data: []\n  }\n\n\n  render() {\n    const {data, onRemove, onUpdate} = this.props;\n    const list = data.map(\n      info => (\n        <PhoneInfo \n          onRemove={onRemove} \n          onUpdate={onUpdate}\n          info={info} \n          key={info.id}\n        ></PhoneInfo>)\n    )\n    console.log('rendering list')\n\n    return (\n      <div>\n        {list}\n      </div>\n    )\n  }\n}\n","import {useState} from 'react'\nimport PhoneForm from './components/PhoneForm';\nimport PhoneInfoList from './components/PhoneInfoList';\n\nfunction App() {\n  \n  let age = 5;\n  // let id = useState(0)\n  \n  const [name, setName] = useState('gg')\n  const [count, setCount] = useState(0)\n  const [id, setId] = useState(3)\n  const [keyword, setKeyword] = useState('');\n  const [information, setInfomation] = useState([\n    {\n      id: 0,\n      name: '홍길동',\n      phone: '010-2233-1455'\n    },\n    {\n      id: 1,\n      name: '김미림',\n      phone: '010-1111-0035'\n    },\n    {\n      id: 2,\n      name: '김민준',\n      phone: '010-2113-1000'\n    }\n  ]);\n\n  const handleChange = (e) => {\n    setKeyword(e.target.value)\n  }\n\n  const handleCreate = (data) => {\n    console.log(id)\n    setInfomation(information.concat({\n      ...data,\n      id: id\n    }));\n    age = age+1;\n    setId(id+1);\n  }\n\n  const handleRemove = (id)=>{\n    console.log('handleRemove')\n    setInfomation(information.filter(info => info.id !== id))\n  }\n\n  const handleUpdate = (id, data) =>{\n    setInfomation(information.map(info => {\n      if(info.id === id) return {id, ...data}\n      else return info;\n    }))\n  }\n\n  return (\n    <div className=\"App\">\n      <PhoneForm onCreate={handleCreate}/>\n      <input \n        value={keyword} \n        onChange={handleChange} \n        placeholder=\"검색...\"\n      />\n      <PhoneInfoList \n        data={information.filter(info=>info.name.indexOf(keyword)>-1)}\n        onRemove={handleRemove}\n        onUpdate={handleUpdate}\n        />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}